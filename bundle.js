(()=>{"use strict";var n={122:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(15),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Yanone+Kaffeesatz:wght@300;400;500;700&display=swap);"]),r.push([n.id,"* {\n  font-family: 'Yanone Kaffeesatz', sans-serif;\n}\n\n::-webkit-scrollbar {\n  width: 5px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: rgb(62, 3, 90);\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\nbody {\n  background-image: linear-gradient(#3048cf, #0f173d);\n  background-repeat: no-repeat;\n  min-height: 100vh;\n}\n\n#main {\n  padding-top: 55px;\n  margin-bottom: 11vh;\n}\n\n#nav-tab {\n  position: fixed;\n  display: flex;\n  margin: 0;\n  justify-content: center;\n  width: 100%;\n  border-bottom: 0;\n  height: 55px;\n  background-color: #000925;\n  z-index: 90;\n}\n\n#Footer {\n  position: fixed;\n  bottom: 0;\n  font-size: 20px;\n  background-color: #000925;\n  border-radius: 5px 5px 0 0;\n  box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -moz-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  z-index: 100;\n}\n\n.nav-link {\n  color: #fff;\n  font-weight: 700;\n  font-size: 24px;\n}\n\n.nav-link:hover {\n  color: #ffa500;\n}\n\n.movieContainer {\n  background-color: #cfcfcf;\n}\n\n.bg-mywhite {\n  background-color: white;\n}\n\n.movie-image {\n  width: 100%;\n  border-radius: 5px;\n  box-shadow: -1px 1px 15px -1px #575757bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #575757bf;\n  -moz-box-shadow: -1px 1px 15px -1px #575757bf;\n}\n\n.pop-bg {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: #20222980;\n  padding: 2% 5% 12% 5%;\n  top: 0;\n  left: 0;\n  z-index: 100;\n}\n\n.pop-details {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: #0b0e11;\n  border-radius: 0 0 10px 10px;\n  overflow-y: scroll;\n  padding: 25px;\n  box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -moz-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n}\n\n.movie-banner {\n  box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -moz-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  border-radius: 10px 10px 0 0;\n}\n\n.close-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 70px;\n  margin: 5px;\n  padding-top: 1px;\n  font-size: 20px;\n}\n\n.pop-image {\n  width: 75%;\n  border-radius: 10px;\n  box-shadow: -1px 1px 10px -1px #dbd7d7bf;\n}\n\n.like-button {\n  border: 0;\n  background-color: #0000;\n  height: 20px;\n  width: 40px;\n  padding-top: 0;\n  margin-top: 5px;\n}\n\n.like-container {\n  border-radius: 10px;\n}\n\n.movie-details {\n  list-style: none;\n}\n\n.list-group-comments li:nth-child(odd) {\n  background: #0c1a27;\n}\n\n.list-group-comments li:nth-child(even) {\n  background: #414144;\n}\n","",{version:3,sources:["webpack://./src/assets/css/style.css"],names:[],mappings:"AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mDAAmD;EACnD,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,SAAS;EACT,eAAe;EACf,yBAAyB;EACzB,0BAA0B;EAC1B,wCAAwC;EACxC,gDAAgD;EAChD,6CAA6C;EAC7C,YAAY;AACd;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,wCAAwC;EACxC,gDAAgD;EAChD,6CAA6C;AAC/C;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,2BAA2B;EAC3B,qBAAqB;EACrB,MAAM;EACN,OAAO;EACP,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,yBAAyB;EACzB,4BAA4B;EAC5B,kBAAkB;EAClB,aAAa;EACb,wCAAwC;EACxC,gDAAgD;EAChD,6CAA6C;AAC/C;;AAEA;EACE,wCAAwC;EACxC,gDAAgD;EAChD,6CAA6C;EAC7C,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,WAAW;EACX,WAAW;EACX,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,UAAU;EACV,mBAAmB;EACnB,wCAAwC;AAC1C;;AAEA;EACE,SAAS;EACT,uBAAuB;EACvB,YAAY;EACZ,WAAW;EACX,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Yanone+Kaffeesatz:wght@300;400;500;700&display=swap');\n\n* {\n  font-family: 'Yanone Kaffeesatz', sans-serif;\n}\n\n::-webkit-scrollbar {\n  width: 5px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: rgb(62, 3, 90);\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\nbody {\n  background-image: linear-gradient(#3048cf, #0f173d);\n  background-repeat: no-repeat;\n  min-height: 100vh;\n}\n\n#main {\n  padding-top: 55px;\n  margin-bottom: 11vh;\n}\n\n#nav-tab {\n  position: fixed;\n  display: flex;\n  margin: 0;\n  justify-content: center;\n  width: 100%;\n  border-bottom: 0;\n  height: 55px;\n  background-color: #000925;\n  z-index: 90;\n}\n\n#Footer {\n  position: fixed;\n  bottom: 0;\n  font-size: 20px;\n  background-color: #000925;\n  border-radius: 5px 5px 0 0;\n  box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -moz-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  z-index: 100;\n}\n\n.nav-link {\n  color: #fff;\n  font-weight: 700;\n  font-size: 24px;\n}\n\n.nav-link:hover {\n  color: #ffa500;\n}\n\n.movieContainer {\n  background-color: #cfcfcf;\n}\n\n.bg-mywhite {\n  background-color: white;\n}\n\n.movie-image {\n  width: 100%;\n  border-radius: 5px;\n  box-shadow: -1px 1px 15px -1px #575757bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #575757bf;\n  -moz-box-shadow: -1px 1px 15px -1px #575757bf;\n}\n\n.pop-bg {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: #20222980;\n  padding: 2% 5% 12% 5%;\n  top: 0;\n  left: 0;\n  z-index: 100;\n}\n\n.pop-details {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: #0b0e11;\n  border-radius: 0 0 10px 10px;\n  overflow-y: scroll;\n  padding: 25px;\n  box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -moz-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n}\n\n.movie-banner {\n  box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -webkit-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  -moz-box-shadow: -1px 1px 15px -1px #dbd7d7bf;\n  border-radius: 10px 10px 0 0;\n}\n\n.close-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 70px;\n  margin: 5px;\n  padding-top: 1px;\n  font-size: 20px;\n}\n\n.pop-image {\n  width: 75%;\n  border-radius: 10px;\n  box-shadow: -1px 1px 10px -1px #dbd7d7bf;\n}\n\n.like-button {\n  border: 0;\n  background-color: #0000;\n  height: 20px;\n  width: 40px;\n  padding-top: 0;\n  margin-top: 5px;\n}\n\n.like-container {\n  border-radius: 10px;\n}\n\n.movie-details {\n  list-style: none;\n}\n\n.list-group-comments li:nth-child(odd) {\n  background: #0c1a27;\n}\n\n.list-group-comments li:nth-child(even) {\n  background: #414144;\n}\n"],sourceRoot:""}]);const d=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(o)for(var i=0;i<this.length;i++){var r=this[i][0];null!=r&&(a[r]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);o&&a[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),e.push(s))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,a=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,a,i=[],r=!0,d=!1;try{for(t=t.call(n);!(r=(o=t.next()).done)&&(i.push(o.value),!e||i.length!==e);r=!0);}catch(n){d=!0,a=n}finally{try{r||null==t.return||t.return()}finally{if(d)throw a}}return i}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=a[1],r=a[3];if(!r)return i;if("function"==typeof btoa){var d=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),c="/*# ".concat(s," */"),l=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[i].concat(l).concat([c]).join("\n")}return[i].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],d=0;d<n.length;d++){var s=n[d],c=o.base?s[0]+o.base:s[0],l=i[c]||0,p="".concat(c," ").concat(l);i[c]=l+1;var A=t(p),m={css:s[1],media:s[2],sourceMap:s[3]};-1!==A?(e[A].references++,e[A].updater(m)):e.push({identifier:p,updater:a(m,o),references:1}),r.push(p)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var d=t(i[r]);e[d].references--}for(var s=o(n,a),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o=t.css,a=t.media,i=t.sourceMap;a?n.setAttribute("media",a):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),i=t(569),r=t.n(i),d=t(565),s=t.n(d),c=t(216),l=t.n(c),p=t(589),A=t.n(p),m=t(122),u={};u.styleTagTransform=A(),u.setAttributes=s(),u.insert=r().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=l(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const x=async n=>{await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/1HfpxRPxUzIbQwHSCpLw/comments?item_id=${n}`,{method:"GET",redirect:"follow"}).then((n=>n.json())).then((n=>{(n=>{const e=document.getElementById("loadCommentsContainer");e.innerHTML="";const t=document.createElement("ul");Array.isArray(n)?(t.classList.add("list-group","list-group-comments"),t.innerHTML+=`\n    <li class="list-group-item"><p class="text-white text-center w-100 m-0">${n.length} : Comments </p></li>\n    `,n.forEach((n=>{t.innerHTML+=`\n            <li class="list-group-item">\n            <p class="text-white">${n.username} (${n.creation_date})</p>\n            <span class="text-white">${n.comment}</span>\n          </li>\n        `}))):t.innerHTML+='<li class="list-group-item bg-dark m-0"><p class="text-white text-center w-100 m-0"> 0 : Comments </p></li>',e.appendChild(t)})(n)})).catch((()=>{throw new Error("Failed to to load comments")}))},h=n=>{const e=document.createElement("div"),t=document.createElement("input");t.classList.add("form-control"),t.placeholder="Username",t.maxLength=30,t.minLength=4,e.appendChild(t);const o=document.createElement("textarea");o.classList.add("form-control","my-2"),o.placeholder="Enter comment",o.rows=3,o.maxLength=300,o.minLength=4,e.appendChild(o);const a=document.createElement("button");return a.innerText="Add comment",a.classList.add("btn","btn-primary"),a.type="button",e.appendChild(a),a.addEventListener("click",(()=>{(async(n,e,t)=>{await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/1HfpxRPxUzIbQwHSCpLw/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:e,comment:t}),redirect:"follow"}).then((()=>{x(n)})).catch((()=>{throw new Error("Failed to to creat a new comments")}))})(n,t.value,o.value),t.value="",o.value=""})),e},b=document.getElementById("main");let f=[];const C=()=>{document.getElementById("allMoviesContainer").querySelectorAll("input").forEach((n=>{let e=0;f.find((e=>e.item_id===parseInt(n.value,10)))&&(e=f.find((e=>e.item_id===parseInt(n.value,10))).likes);const t=n.parentNode,o=document.createElement("div");o.id="likeContainer",o.classList.add("position-absolute","d-flex","flex-row","bottom-0","end-0","bg-dark","p-2","like-container");const a=document.createElement("input");a.classList.add("inputLikeCounter"),a.type="hidden",a.id=n.value,a.value=e,o.append(a);const i=document.createElement("p");i.classList.add("text-white","m-1","fs-3"),i.textContent=`Likes ${e}`,o.appendChild(i);const r=document.createElement("button");r.classList.add("like-button"),r.innerHTML='<i class="fas fa-heart fs-2 text-white"></i>',o.appendChild(r),r.addEventListener("click",(()=>{(async n=>{await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/1HfpxRPxUzIbQwHSCpLw/likes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:parseInt(n,10)}),redirect:"follow"}).catch((n=>Error("error",n)))})(n.value);const e=document.getElementById(n.value);e.value=parseInt(e.value,10)+1,i.textContent=`Likes ${e.value}`})),t.appendChild(o)}))},E=document.getElementById("main"),g=n=>{E.innerHTML="";const e=document.createElement("div");e.classList.add("w-100","m-0","p-0","bg-mywhite","p-3"),e.innerHTML+=`<div class="d-flex flex-column align-items-center border-4 border-bottom my-2">\n    <h1>Tv Shows</h1>\n    <div class="d-flex flex-row">\n      <p id="moviesTotalCount" class="fs-2 mx-3">${n.length}</p>\n      <p class="fs-2">Tv shows available!</p>\n    </div>\n    </div>`,E.appendChild(e);const t=document.createElement("div");t.id="allMoviesContainer",t.classList.add("w-100","row","my-2","p-0","border-4","border-bottom"),e.appendChild(t);let o=1;const a=e=>{t.innerHTML="";const o=12*e,a=o-13;n.filter(((n,e)=>e>a&&e<o?n:0)).forEach((n=>{const e=document.createElement("div");e.classList.add("col-6","col-md-3","m-0","p-2"),t.appendChild(e);const o=document.createElement("div");o.classList.add("w-100","border","rounded","shadow","movieContainer","position-relative"),e.appendChild(o);const a=document.createElement("input");a.type="hidden",a.value=n.id,o.appendChild(a);const i=document.createElement("a");i.href="#",i.innerHTML=`<a><img class="movie-image" src="${n.image.medium}"></a>`,o.appendChild(i),i.addEventListener("click",(()=>{(n=>{const e=document.createElement("div");e.classList.add("pop-bg"),b.appendChild(e);const t=document.createElement("div");t.classList.add("w-100","bg-dark","m-0","p-2","position-relative","movie-banner"),t.innerHTML=`<h2 class="text-white text-center my-1">${n.name}</h2>`,e.appendChild(t);const o=document.createElement("div");o.classList.add("pop-details","row","m-0"),e.appendChild(o);const a=document.createElement("BUTTON");a.classList.add("btn","btn-outline-danger","close-btn"),a.textContent="Close",t.appendChild(a),a.addEventListener("click",(()=>{b.removeChild(e)}));const i=document.createElement("div");i.classList.add("col-6","p-1","d-flex","flex-column","align-items-center"),o.appendChild(i);const r=document.createElement("img");r.classList.add("pop-image"),r.src=n.image.original,i.appendChild(r);const d=document.createElement("div");d.classList.add("w-100","text-white"),d.innerHTML=`\n   <ul class="list-group p-3 movie-details fs-6">\n      <li><span>${n.summary}</span></li>\n      <li class="d-flex flex-row justify-content-between"><p> Language: ${n.language}</p> <p> Premiered: ${n.premiered}</p></li>\n      <li class="d-flex flex-row justify-content-between"><p>Ratings: ${n.rating.average}</p> <a href="${n.officialSite}" target="_blank" class="my-2"> Official Site </a></li>\n   </ul>\n   `,i.appendChild(d);const s=document.createElement("div");s.classList.add("col-6","p-2"),o.appendChild(s),s.appendChild(h(n.id));const c=document.createElement("div");c.classList.add("my-2"),c.id="loadCommentsContainer",s.appendChild(c),x(n.id)})(n)}))}))};a(o);const i=document.createElement("nav");i.classList.add("Page","navigation","my-3"),e.appendChild(i);const r=document.createElement("ul");r.classList.add("pagination","d-flex","flex-wrap","justify-content-center"),i.appendChild(r);const d=document.createElement("li");d.classList.add("page-item","disabled"),d.innerHTML='<a href="#" class="page-link">Previous</a>',r.appendChild(d),d.addEventListener("click",(()=>{o>1&&(o-=1,a(o),C())}));for(let e=1;e<n.length/12;e+=1){const n=document.createElement("li");o===e&&n.classList.add("active"),n.classList.add("page-item"),n.innerHTML=`<a href="#" class="page-link">${e}</a>`,r.appendChild(n)}r.addEventListener("click",(n=>{"A"===n.target.nodeName&&"Previous"!==n.target.textContent&&"Next"!==n.target.textContent&&(a(n.target.textContent),C(),o=parseInt(n.target.textContent,10))}));const s=document.createElement("li");s.classList.add("page-item"),s.innerHTML='<a href="#" class="page-link">Next</a>',r.appendChild(s),s.addEventListener("click",(()=>{o<n.length/12&&(o+=1,a(o),C())})),r.addEventListener("click",(()=>{r.querySelectorAll("a").forEach((e=>{"Previous"===e.textContent&&o>1?e.parentElement.classList.remove("disabled"):"Previous"===e.textContent&&o<2&&e.parentElement.classList.add("disabled"),"Next"===e.textContent&&o>n.length/12-2?e.parentElement.classList.add("disabled"):"Next"===e.textContent&&o<n.length/12&&e.parentElement.classList.remove("disabled"),parseInt(e.textContent,10)===o?e.parentElement.classList.add("active"):e.parentElement.classList.remove("active")}))}))},v=async()=>{await fetch("https://api.tvmaze.com/shows").then((n=>n.json())).then((n=>{g(n)})).then((()=>{(async()=>{await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/1HfpxRPxUzIbQwHSCpLw/likes",{method:"GET",redirect:"follow"}).then((n=>n.json())).then((n=>{f=n,C()})).catch((()=>{throw new Error("Failed to get like information")}))})()})).catch((()=>{throw new Error("Failed to load tv shows")}))},w=document.getElementById("nav-home-tab"),B=document.getElementById("nav-contact-tab"),y=document.getElementById("main"),k=()=>{y.innerHTML=""};w.addEventListener("click",(()=>{k(),v()})),B.addEventListener("click",(()=>{k()})),v()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,